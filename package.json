{
  "name": "gaidn",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "build": "next build",
    "cf-typegen": "wrangler types --env-interface CloudflareEnv env.d.ts",
    "check": "npm run build && tsc",
    "preview": "npx @opennextjs/cloudflare build && npx @opennextjs/cloudflare preview",
    "deploy": "npx @opennextjs/cloudflare build && npx @opennextjs/cloudflare deploy",
    "dev": "next dev",
    "dev:mock": "USE_MOCK_DB=true next dev",
    "dev:port": "next dev -p",
    "kill-port": "powershell -Command \"$port = if ($env:PORT) { $env:PORT } else { 3000 }; Get-NetTCPConnection -LocalPort $port -ErrorAction SilentlyContinue | ForEach-Object { Stop-Process -Id $_.OwningProcess -Force -ErrorAction SilentlyContinue } ; Write-Host \\\"Port $port cleared\\\"\"",
    "kill-port:mac": "PORT=${PORT:-3000}; lsof -i tcp:$PORT | grep LISTEN | awk '{print $2}' | xargs kill -9 || echo \"Port $PORT cleared\"",
    "lint": "bunx biome lint --write && bunx tsc --noEmit",
    "format": "bunx biome format --write",
    "restart": "powershell -Command \"$port = if ($env:PORT) { $env:PORT } else { 3000 }; Get-NetTCPConnection -LocalPort $port -ErrorAction SilentlyContinue | ForEach-Object { Stop-Process -Id $_.OwningProcess -Force -ErrorAction SilentlyContinue } ; if ($env:PORT) { npm run dev -- -p $env:PORT } else { npm run dev }\"",
    "restart:mac": "PORT=${PORT:-3000}; lsof -i tcp:$PORT | grep LISTEN | awk '{print $2}' | xargs kill -9 || echo \"Port $PORT cleared\"; if [ -n \"$PORT\" ] && [ \"$PORT\" != \"3000\" ]; then npm run dev -- -p $PORT; else npm run dev; fi",
    "start": "next start",
    "validate": "./validate-build-only.sh",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "jest --testPathPattern=unit",
    "test:integration": "jest --testPathPattern=integration",
    "verify:db": "node scripts/verify-db-setup.js"
  },
  "dependencies": {
    "@auth/prisma-adapter": "^2.10.0",
    "@cloudflare/workers-types": "^4.20250628.0",
    "@opennextjs/cloudflare": "^1.3.0",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-dropdown-menu": "^2.1.15",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.5",
    "@radix-ui/react-tabs": "^1.1.12",
    "@supabase/supabase-js": "^2.50.2",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "lucide-react": "^0.475.0",
    "next": "^15.3.2",
    "next-auth": "^5.0.0-beta.29",
    "next-intl": "^4.3.4",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "sonner": "^2.0.6",
    "tailwind-merge": "^3.3.1",
    "tailwindcss-animate": "^1.0.7",
    "uuid": "^11.1.0"
  },
  "devDependencies": {
    "@biomejs/biome": "1.9.4",
    "@eslint/eslintrc": "^3.3.1",
    "@testing-library/jest-dom": "^6.4.2",
    "@testing-library/react": "^14.2.1",
    "@types/jest": "^29.5.12",
    "@types/node": "^20.17.50",
    "@types/react": "^18.3.22",
    "@types/react-dom": "^18.3.7",
    "@types/uuid": "^10.0.0",
    "autoprefixer": "^10.4.21",
    "bippy": "^0.3.16",
    "eslint": "^9.27.0",
    "eslint-config-next": "15.1.7",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "open-next": "^1.3.0",
    "postcss": "^8.5.3",
    "tailwindcss": "^3.4.17",
    "ts-jest": "^29.1.2",
    "typescript": "^5.8.3",
    "wrangler": "^4.20.1"
  }
}
